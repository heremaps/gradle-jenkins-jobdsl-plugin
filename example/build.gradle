buildscript {
    ext.jenkinsJobdslPluginVersion = '3.2.1'

    repositories {
        maven {
            url 'https://plugins.gradle.org/m2'
        }

        maven {
            url 'https://repo.jenkins-ci.org/releases/'
        }
    }

    dependencies {
        classpath("com.here.gradle.plugins:gradle-jenkins-jobdsl-plugin:${jenkinsJobdslPluginVersion}") {
            // Exclude unneeded transitive dependencies that can cause dependency resolution issues.
            exclude(module: 'bootstrap')
            exclude(module: 'groovy-all')
            exclude(module: 'org-netbeans-insane')

            // Exclude unneeded transitive dependencies on XML libraries that can break the generation of config files.
            // See: https://issues.jenkins-ci.org/browse/JENKINS-35638
            exclude(module: 'xalan')
            exclude(module: 'xercesImpl')
        }
    }
}

apply plugin: 'com.here.jobdsl'

repositories {
    maven {
        url 'https://plugins.gradle.org/m2'
    }
}

dependencies {
    compile("com.here.gradle.plugins:gradle-jenkins-jobdsl-plugin:${jenkinsJobdslPluginVersion}") {
        exclude(module: 'org-netbeans-insane')
        exclude(module: 'xalan')
        exclude(module: 'xercesImpl')
    }

    jenkinsPlugins 'org.jenkins-ci.plugins:build-timeout:1.19'
    jenkinsPlugins 'org.jenkins-ci.plugins:cloudbees-folder:6.2.1'
    jenkinsPlugins 'org.jenkins-ci.plugins:timestamper:1.8.9'
}

if (properties.buildAgainstPluginProject.toBoolean()) {
    configurations.all {
        resolutionStrategy.dependencySubstitution {
            substitute module('com.here.gradle.plugins:gradle-jenkins-jobdsl-plugin') with project(':plugin')
        }
    }
}

jobdsl {
    /**
     * Example for configuring multiple servers. They can be selected by appending "--server=[servername] to the Gradle
     * task. Server specific configuration is available in the Job DSL scripts by calling
     * {@link com.here.gradle.plugins.jobdsl.util.DslConfig#get(java.lang.String)}. Server specific configuration is
     * overwritten by global configuration.
     */
    servers {
        localhost {
            jenkinsUrl = 'http://localhost:8080/'
            configuration = [
                    serverName: 'Localhost'
            ]
        }

        staging {
            jenkinsUrl = 'http://localhost:8080/'
            configuration = [
                    serverName: 'Staging'
            ]
        }

        production {
            jenkinsUrl = 'http://localhost:8080/'
            jenkinsUser = 'bot-account'
            // jenkinsApiToken not provided to prevent accidental job deployment to production server.
            //jenkinsApiToken = 'yourApiToken'
            configuration = [
                    serverName: 'Production'
            ]
        }
    }

    /**
     * Example for a global configuration that is made available in the Job DSL scripts by calling
     * {@link com.here.gradle.plugins.jobdsl.util.DslConfig#get(java.lang.String)}. In this case it's configured by
     * a Gradle parameter that can be set in gradle.properties or with "-PenableJobs=true" on the command line.
     */
    configuration = [
            enableJobs: project.properties['enableJobs'].toBoolean()
    ]
}
